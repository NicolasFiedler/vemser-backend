
CREATE USER VEM_SER IDENTIFIED BY oracle; 
GRANT CONNECT TO VEM_SER; 
GRANT CONNECT, RESOURCE, DBA TO VEM_SER; 
GRANT CREATE SESSION TO VEM_SER; 
GRANT DBA TO VEM_SER; 
GRANT CREATE VIEW, CREATE PROCEDURE, CREATE SEQUENCE to VEM_SER; 
GRANT UNLIMITED TABLESPACE TO VEM_SER; 
GRANT CREATE MATERIALIZED VIEW TO VEM_SER; 
GRANT CREATE TABLE TO VEM_SER; 
GRANT GLOBAL QUERY REWRITE TO VEM_SER; 
GRANT SELECT ANY TABLE TO VEM_SER;

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE ' || 'Pessoa_X_Pessoa_Endereco';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE ' || 'Contato';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE ' || 'Pessoa';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE ' || 'Endereco_Pessoa';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;


CREATE TABLE VEM_SER.Professor (
  id_professor NUMBER NOT NULL,
  id_universidade NUMBER NOT NULL,
  nome varchar2(255),
  salario NUMBER(10,2),
  PRIMARY KEY(id_professor, id_universidade)
);


CREATE TABLE VEM_SER.Pessoa (
  id_pessoa NUMBER NOT NULL,
  nome VARCHAR2(255) NOT NULL,
  email VARCHAR2(255) NOT NULL,
  data_nascimento DATE,
  cpf VARCHAR2(11) NOT NULL,
  PRIMARY KEY(id_pessoa)
);

BEGIN
  EXECUTE IMMEDIATE 'DROP SEQUENCE ' || 'seq_pessoa2';
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE != -2289 THEN
      RAISE;
    END IF;
END;

CREATE SEQUENCE VEM_SER.seq_pessoa2
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;


INSERT INTO VEM_SER.PESSOA
(ID_PESSOA, NOME, EMAIL, DATA_NASCIMENTO, CPF)
VALUES(VEM_SER.seq_pessoa2.nextval, 'Maicon Machado Gerardi', 'maicon@maicon.com', TO_DATE('08-09-1991', 'dd-mm-yyyy'), '48863250090');

INSERT INTO VEM_SER.PESSOA
(ID_PESSOA, NOME, EMAIL, DATA_NASCIMENTO, CPF)
VALUES(VEM_SER.seq_pessoa2.nextval, 'Pedro Dantas', 'pedro@pedro.com', TO_DATE('08-09-1980', 'dd-mm-yyyy'), '29629873036');

INSERT INTO VEM_SER.PESSOA
(ID_PESSOA, NOME, EMAIL, DATA_NASCIMENTO, CPF)
VALUES(VEM_SER.seq_pessoa2.nextval, 'Bruna Da Silva', 'bruna@bruna.com', TO_DATE('06-01-1991', 'dd-mm-yyyy'), '01468462067');

INSERT INTO VEM_SER.PESSOA
(ID_PESSOA, NOME, EMAIL, DATA_NASCIMENTO, CPF)
VALUES(VEM_SER.seq_pessoa2.nextval, 'Fernanda Rosa', 'fernanda@fernanda.com', TO_DATE('06-05-1970', 'dd-mm-yyyy'), '01468462067');



------ contato

CREATE TABLE VEM_SER.Contato (
  id_contato NUMBER NOT NULL,
  id_pessoa NUMBER NOT NULL,
  tipo NUMBER NOT NULL,
  numero VARCHAR2(255) NOT NULL,
  descricao VARCHAR2(100),
  PRIMARY KEY(id_contato),
  CONSTRAINT FK_CONTATO_PESSOA FOREIGN KEY (id_pessoa) REFERENCES VEM_SER.Pessoa (id_pessoa)
);

BEGIN
  EXECUTE IMMEDIATE 'DROP SEQUENCE ' || 'seq_contato';
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE != -2289 THEN
      RAISE;
    END IF;
END;

CREATE SEQUENCE VEM_SER.seq_contato
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

-- contatos do maicon
INSERT INTO VEM_SER.CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(VEM_SER.seq_contato.nextval, 1, 0, '51955565585', 'whatsapp');

INSERT INTO VEM_SER.CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(VEM_SER.seq_contato.nextval, 1, 1, '48335698566', 'trabalho');

-- contatos do pedro
INSERT INTO VEM_SER.CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(VEM_SER.seq_contato.nextval, 2, 0, '51955565585', 'celular');

INSERT INTO VEM_SER.CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(VEM_SER.seq_contato.nextval, 2, 1, '48335698566', 'casa');

-- contatos da bruna
INSERT INTO VEM_SER.CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(VEM_SER.seq_contato.nextval, 3, 0, '51995866695', 'whatsapp');

-- contatos da bruna
INSERT INTO VEM_SER.CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(VEM_SER.seq_contato.nextval, 3, 0, '51995866695', 'whatsapp');

-- contatos da fernanda

SELECT * FROM vem_ser.contato;

------- endereço
CREATE TABLE VEM_SER.Endereco_Pessoa (
  id_endereco NUMBER NOT NULL,
  tipo NUMBER NOT NULL,
  logradouro VARCHAR2(200) NOT NULL,
  numero NUMBER NOT NULL,
  complemento VARCHAR2(200) NULL,
  cep VARCHAR2(8) NOT NULL,
  cidade VARCHAR2(300) NOT NULL,
  estado VARCHAR2(100) NOT NULL,
  pais VARCHAR2(100) NOT NULL,
  PRIMARY KEY(id_endereco)
);

BEGIN
  EXECUTE IMMEDIATE 'DROP SEQUENCE ' || 'seq_endereco_contato';
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE != -2289 THEN
      RAISE;
    END IF;
END;

CREATE SEQUENCE VEM_SER.seq_endereco_contato
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;


INSERT INTO VEM_SER.ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(VEM_SER.seq_endereco_contato.nextval, 0, 'Rua José Dos Santos', 120, 'casa', '88080700', 'Florianópolis', 'SC', 'Brasil');

INSERT INTO VEM_SER.ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(VEM_SER.seq_endereco_contato.nextval, 1, 'Rua Pedro Canvas', 800, 'apto 2', '88805500', 'Porto Alegre', 'RS', 'Brasil');

INSERT INTO VEM_SER.ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(VEM_SER.seq_endereco_contato.nextval, 0, 'Rua Pedro Fantin', 800, 'apt 52', '88080700', 'Florianópolis', 'SC', 'Brasil');

INSERT INTO VEM_SER.ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(VEM_SER.seq_endereco_contato.nextval, 0, 'Rua Mario Quintana', 50, NULL, '88805800', 'Santos', 'SP', 'Brasil');

INSERT INTO VEM_SER.ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(VEM_SER.seq_endereco_contato.nextval, 1, 'Avenida Brasil', 1855, NULL, '88754566', 'Rio De Janeiro', 'RJ', 'Brasil');

INSERT INTO VEM_SER.ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(VEM_SER.seq_endereco_contato.nextval, 0, 'Avenida Luis Carvalho', 444, NULL, '88987788', 'Rio De Janeiro', 'RJ', 'Brasil');


CREATE TABLE VEM_SER.Pessoa_X_Pessoa_Endereco (
  id_pessoa NUMBER NOT NULL,
  id_endereco NUMBER NOT NULL,
  PRIMARY KEY(id_pessoa, id_endereco),
  CONSTRAINT FK_CE_PESSOA FOREIGN KEY (id_pessoa) REFERENCES VEM_SER.Pessoa (id_pessoa),
  CONSTRAINT FK_CE_ENDERECO_PESSOA FOREIGN KEY (id_endereco) REFERENCES VEM_SER.Endereco_Pessoa (id_endereco)
);


-- enderecos maicon
INSERT INTO VEM_SER.PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(1, 1);

INSERT INTO VEM_SER.PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(1, 2);

INSERT INTO VEM_SER.PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(1, 3);

-- enderecos bruna
INSERT INTO VEM_SER.PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(3, 3);

-- fernanda
INSERT INTO VEM_SER.PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(4, 4);

INSERT INTO VEM_SER.PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(4, 5);


--SELECT * FROM PESSOA;
--SELECT * FROM CONTATO


--
----homeWork 3
--	--RIGHT OUTER JOIN
--SELECT P.NOME
--	 , C.NUMERO 
--FROM	   PESSOA P
--RIGHT JOIN CONTATO C ON (P.ID_PESSOA = C.ID_PESSOA);
--
--SELECT P.NOME
--	 , E.LOGRADOURO
--	 , E.NUMERO 
--	 , E.CIDADE 
--	 , E.ESTADO
--FROM	   PESSOA P 
--RIGHT JOIN PESSOA_X_PESSOA_ENDERECO PXPE ON (P.ID_PESSOA = PXPE.ID_PESSOA)
--RIGHT JOIN ENDERECO_PESSOA E ON (PXPE.ID_ENDERECO = E.ID_ENDERECO);
--
--SELECT P.NOME
--	 , C.NUMERO 
--	 , E.LOGRADOURO
--	 , E.NUMERO 
--	 , E.CIDADE 
--	 , E.ESTADO
--FROM	   PESSOA P 
--RIGHT JOIN CONTATO C ON (P.ID_PESSOA = C.ID_PESSOA)
--RIGHT JOIN PESSOA_X_PESSOA_ENDERECO PXPE ON (P.ID_PESSOA = PXPE.ID_PESSOA)
--RIGHT JOIN ENDERECO_PESSOA E ON (PXPE.ID_ENDERECO = E.ID_ENDERECO);
--
--	--FULL OUTER JOIN
--
--SELECT P.NOME
--	 , C.NUMERO 
--FROM	   PESSOA P
--FULL OUTER JOIN CONTATO C ON (P.ID_PESSOA = C.ID_PESSOA);
--
--SELECT P.NOME
--	 , E.LOGRADOURO
--	 , E.NUMERO 
--	 , E.CIDADE 
--	 , E.ESTADO
--FROM	   PESSOA P 
--FULL JOIN PESSOA_X_PESSOA_ENDERECO PXPE ON (P.ID_PESSOA = PXPE.ID_PESSOA)
--FULL JOIN ENDERECO_PESSOA E ON (PXPE.ID_ENDERECO = E.ID_ENDERECO);
--
--SELECT P.NOME
--	 , C.NUMERO 
--	 , E.LOGRADOURO
--	 , E.NUMERO 
--	 , E.CIDADE 
--	 , E.ESTADO
--FROM	   PESSOA P 
--FULL JOIN CONTATO C ON (P.ID_PESSOA = C.ID_PESSOA)
--FULL JOIN PESSOA_X_PESSOA_ENDERECO PXPE ON (P.ID_PESSOA = PXPE.ID_PESSOA)
--FULL JOIN ENDERECO_PESSOA E ON (PXPE.ID_ENDERECO = E.ID_ENDERECO);
--
--	--
--
--SELECT P.NOME 
--FROM PESSOA p 
--WHERE EXISTS (SELECT E.ID_ENDERECO
--			    FROM PESSOA_X_PESSOA_ENDERECO e 
--			   WHERE P.ID_PESSOA = E.ID_PESSOA);
--
--SELECT P.NOME
--	 , E.LOGRADOURO
--	 , E.NUMERO 
--	 , E.CIDADE 
--	 , E.ESTADO
--FROM	   PESSOA P 
--INNER JOIN PESSOA_X_PESSOA_ENDERECO PXPE ON (P.ID_PESSOA = pxpe.ID_PESSOA)
--INNER JOIN ENDERECO_PESSOA E ON (PXPE.ID_ENDERECO = E.ID_ENDERECO);
--
--
---- resto
--SELECT 
--	P.nome,  
--	C.numero
--FROM 		PESSOA p
--CROSS JOIN	CONTATO c;
--	
--
--SELECT 
--	P.NOME,
--	C.NUMERO 
--FROM 	   PESSOA p 
--INNER JOIN CONTATO c ON (P.ID_PESSOA = C.ID_CONTATO);
--
--SELECT p.NOME
--	 , e.LOGRADOURO
--	 , e.NUMERO 
--	 , e.CIDADE 
--	 , e.ESTADO
--FROM	   PESSOA p 
--INNER JOIN PESSOA_X_PESSOA_ENDERECO pxpe ON (p.ID_PESSOA = pxpe.ID_PESSOA)
--INNER JOIN ENDERECO_PESSOA e ON (pxpe.ID_ENDERECO = e.ID_ENDERECO);
--


